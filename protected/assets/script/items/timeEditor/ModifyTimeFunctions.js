// Используется для того чтобы при необходимости придать дополнительную 
// функциональность TimeEditor. Задаёт функции которые будут вызваны перед 
// выполнением соответствующих действий TimeEditor.
// Функции должны принимать два аргумента : 
// 1)время, которое будет изменено/удалено.
// 2)successFunction функция которая будет вызвана в случае успеха
//   операции. Конечно каким образом это(вызов successFunction) будет 
//   происходить и будет ли  происходить вообще должен позаботиться тот кто 
//   задаёт функции в объекте UpdateTimeFunctions при его иницаилизации.
// Т.е. например 
// var obj = new ModifyTimeFunctions();
// obj.makeFree = function(time, successFunction) {
//      // Внутри ajax Запрос.
//      requestToServerForAsyncFreeTime(
//          time, 
//          function() {
//              showSuccessMessage();
//              successFunction();
//          }, 
//          errorFunction
//      );    
// }; 
// Все это "нагромождение" нужно по причине того, что TimeEditor используется
// внешним объеком о котором он(TimeEditor) ничего не знает. И функциональности
// TimeEditor может не хватать.
// Например, внешний объкт может отправлять на сервер запрос для изменения 
// конкретного элемента time для определённого дня. А id дня или дату знает 
// только внешний объект - он и формирует запрос. Если запрос успешен выполнятся
// successFunction, которую задал ранее TimeEditor. SuccessFunction  обновит
// внешний вид успешно изменённого элемента в TimeEditor-е.
// 
// Также вместо этого для решения подобной задачи можно было бы использовать 
// promise который возвращала бы функиця в TimeEditor функиция makeFree.
// И makeFree принимала бы в этом случае один аргумент - time. Логика
// задаваемая в successFunction в этом случае выполнялась бы внутри TimeEditor,
// как один из callback-ов promise.
// 
// Или вместо использования successFunction можно было бы создать в TimeEditor 
// слушатель событий, который получал бы события в случае успешного изменения
// времени и вызывал бы обновление элементов в timeEditor.  
// Этому слушателю нужно посылать события внутри функций makeFree и т.д.
var ModifyTimeFunctions = function() {    
    
    this.makeFree = null;
    this.makeBusy = null;
    this.makeRecordImpossible = null;
    this.delete = null;

};